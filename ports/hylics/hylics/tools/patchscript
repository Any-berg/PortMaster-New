#!/bin/bash

# Set GAMEDIR to the current directory and set logfile
GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"
LOGERR="$GAMEDIR/patch_error.txt"

# Redirect output and error to the log file
rm -rf $LOGFILE $LOGERR
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

# Exports
export DATADIR="$GAMEDIR"
export LD_LIBRARY_PATH="/usr/lib:$GAMEDIR/lib:$LD_LIBRARY_PATH"
export SDL_GAMECONTROLLERCONFIG="$sdl_controllerconfig"
export TOOLDIR="$GAMEDIR/tools"
export TMPDIR="$GAMEDIR/tmp"
export PATH="$GAMEDIR/tools:$PATH"

PYTHON=$(which python3)
cd "$PATCHDIR"

apply_xdelta() {
    local original="$DATADIR/Data/Scripts.rvdata2"
    local patch="$TOOLDIR/patches/hylics.xdelta"
    local output_file="$DATADIR/Data/Scripts.patched.rvdata2"

    # Verifying that original file exists
    if [ -f "$original" ]; then
        echo "Original file found, applying xdelta patch..."

        # Apply patch
        output=$($controlfolder/xdelta3 -d -s "$original" "$patch" "$output_file" 2>&1)
        if [ $? -eq 0 ]; then
            echo "Patch applied successfully."
            echo "$output"

            # Replace the old file if necessary
            mv "$output_file" "$original" || { echo "Failed to replace original file."; return 1; }
        else
            echo "Failed to apply patch:"
            echo "$output"
            mv "$LOGFILE" "$LOGERR" 2>/dev/null
            return 1
        fi
    else
        echo "Original file '$original' not found. Patch aborted."
        return 1
    fi
}

process_game() {
    apply_xdelta

    # Final completion message
    echo "Patching process complete!"
}

process_game