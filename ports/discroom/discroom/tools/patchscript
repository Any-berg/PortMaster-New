#!/bin/bash
# Set GAMEDIR to the current directory and set logfile
GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"

# Redirect output and error to the log file
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

# Exports
export DATADIR="$GAMEDIR/assets"
export DATAFILE="discroom.port"
export LD_LIBRARY_PATH="/usr/lib:$GAMEDIR/lib:$GAMEDIR/tools/libs:$LD_LIBRARY_PATH"
export SDL_GAMECONTROLLERCONFIG="$sdl_controllerconfig"
export TOOLDIR="$GAMEDIR/tools"
export TMPDIR="$GAMEDIR/tmp"
export PATH="$GAMEDIR/tools:$PATH"

# Permissions
chmod 777 "$TOOLDIR/gmKtool.py"
chmod 777 "$TOOLDIR/oggenc"
chmod 777 "$TOOLDIR/oggdec"
chmod 777 "$TOOLDIR/xdelta3"

cd "$GAMEDIR"

apply_xdelta() {
    # Check if the data.win file exists and apply xdelta
        if [ -f "$DATADIR/data.win" ]; then
        checksum=$(md5sum "$DATADIR/data.win" | awk '{print $1}')
    
        # Checksum for the GOG version
        if [ "$checksum" = "2194950ef1e18110653065efcb940244" ]; then
            $ESUDO $TOOLDIR/xdelta3 -d -s $DATADIR/data.win -f $TOOLDIR/patches/discroomgog.xdelta $DATADIR/game.droid && \
            rm $DATADIR/data.win
            echo "GOG data.win has been patched"
        # Checksum for the Steam version
        elif [ "$checksum" = "eb904bb033d7674894384151bd33a5be" ]; then
            $ESUDO $TOOLDIR/xdelta3 -d -s $DATADIR/data.win -f $TOOLDIR/patches/discroomsteam.xdelta $DATADIR/game.droid && \
            rm $DATADIR/data.win
 	        echo "Steam data.win has been patched"
        else
            echo "Error: MD5 checksum of data.win does not match any expected version."
        fi
    else    
        echo "Error: Missing data.win in $DATADIR folder or game has been patched."
    fi
}

compress_audio() {
    mkdir -p "$TMPDIR"

    # Run the compression tool
    PYTHON=$(which python3)
    echo "Running GMTools on data and audiogroups."
    $PYTHON ./tools/gmKtool.py -vv -m 1000 -r -b 64 -d "$TMPDIR" "$DATADIR/game.droid"

    if [ $? -eq 0 ]; then
        echo "Compression completed successfully."
        mv "$TMPDIR/"* "$DATADIR"
        echo "Moved compressed files to $DATADIR."
        rmdir "$TMPDIR"
        echo "Temporary directory $TMPDIR removed."
        echo "Audio compression applied successfully."
    else
        echo "Audio compression failed."
        echo "Cleaning up temporary directory $TMPDIR."
        rm -rf "$TMPDIR"
    fi
}

zip_archive() {
    echo "Archiving specified files into $DATAFILE..."

    # Include only the specific files in the zip
    zip -r -0 "$DATAFILE" ./assets/*.ogg ./assets/*.csv ./assets/game.droid

    if [ $? -eq 0 ]; then
        echo "Successfully archived specified files."
		rm -f ./assets/*.ogg ./assets/*.csv ./assets/game.droid
    else
        echo "Error: Failed to create zip archive."
        return 1
    fi
}

process_game() {
    # Delete unnecessary files
    rm -rf $DATADIR/*.exe $DATADIR/*.dll $DATADIR/*.ico $DATADIR/gog* $DATADIR/unins000* $DATADIR/.gitkeep 
    echo "Removed unnecessary files"

    echo "Applying xdelta patch"
    apply_xdelta
    sleep 1
    echo "Compressing audio..."
    compress_audio
    sleep 1
    echo "Finishing up..."
    zip_archive
    sleep 1
	
    # Final completion message
    echo "Patching process complete!"
}

# Call the function
process_game