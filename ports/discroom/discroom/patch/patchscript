#!/bin/bash

# Set the log file
LOGFILE="$PATCHDIR/patchlog.txt"

# Redirect output and error to the log file
> "$LOGFILE" && exec > >(tee "$LOGFILE") 2>&1

echo "PATCHDIR is set to: $PATCHDIR"

# Exports
export TOOLDIR="$PATCHDIR/tools"
export TMPDIR="$PATCHDIR/tmp"
export PATH=$PATH:TOOLDIR
export LD_LIBRARY_PATH="/usr/lib:$PATCHDIR/libs:$TOOLDIR/libs:$LD_LIBRARY_PATH"

# Permissions
chmod 777 "$TOOLDIR/gmKtool.py"
chmod 777 "$TOOLDIR/oggdec"
chmod 777 "$TOOLDIR/oggenc"
chmod 777 "$TOOLDIR/xdelta3"

cd "$PATCHDIR"

process_game() {
    # Array of files and patterns to delete
	files_to_delete=(
    "./gamedata/*.exe"
    "./gamedata/*.dll"
    "./gamedata/*.ico"
    "./gamedata/gog*"
    "./gamedata/unins000*"
)

	# Loop through patterns and delete matching files
	for pattern in "${files_to_delete[@]}"; do
    # Expand the pattern into matching files
    matches=$(find ./gamedata/ -path "$pattern" -type f 2>/dev/null)

    if [[ -z "$matches" ]]; then
        echo "No files found for pattern: $pattern"
    else
        for file in $matches; do
            rm "$file"
            echo "Deleted $file"
        done
    fi
done

    # If "gamedata/data.win" exists and matches the checksum of the GOG or Steam versions
    if [ -f "./gamedata/data.win" ]; then
        checksum=$(md5sum "./gamedata/data.win" | awk '{print $1}')
    
        # Checksum for the GOG version
        if [ "$checksum" = "2194950ef1e18110653065efcb940244" ]; then
            $ESUDO tools/xdelta3 -d -s gamedata/data.win -f ./patch/discroomgog.xdelta gamedata/game.droid && \
            rm gamedata/data.win
            echo "GOG data.win has been patched"
        # Checksum for the Steam version
        elif [ "$checksum" = "eb904bb033d7674894384151bd33a5be" ]; then
            $ESUDO tools/xdelta3 -d -s gamedata/data.win -f ./patch/discroomsteam.xdelta gamedata/game.droid && \
            rm gamedata/data.win
 	        echo "Steam data.win has been patched"
        else
            echo "Error: MD5 checksum of data.win does not match any expected version."
        fi
    else    
        echo "Error: Missing data.win in gamedata folder or game has been patched."
    fi

      # Compress audio
    if [ -f "$PATCHDIR/compress.txt" ]; then
        echo "Compressing audio. The process will take 5-10 minutes"  > $CUR_TTY
        mkdir -p "$TMPDIR"
        ./tools/gmKtool.py -vv -m 262144 -b 64 -d "$TMPDIR" "$PATCHDIR/gamedata/game.droid"

        if [ $? -eq 0 ]; then
            mv $TMPDIR/* "$PATCHDIR/gamedata"
            rm "$PATCHDIR/compress.txt"
            rmdir "$TMPDIR"
            echo "Audio compression applied successfully." > $CUR_TTY
        else
            echo "Audio compression failed." > $CUR_TTY
            rm -rf "$TMPDIR"
        fi
    fi

    sleep 3

    # Check for .ogg files and move to APK
    if [ -n "$(ls ./gamedata/*.ogg 2>/dev/null)" ]; then
        mkdir -p ./assets
        mv ./gamedata/*.ogg ./assets/
        echo "Moved .ogg files to ./assets/"

        zip -r -0 ./game.apk ./assets/
        echo "Zipped contents to ./game.apk"

        rm -rf ./assets
        echo "Deleted assets directory"
    else
        echo "No .ogg files found"
    fi
	
	#Delete "Place game files here" and echo patching complete
	rm -f "./gamedata/place game files here"
	echo "Patching is complete!"
}

# Call the function
process_game
