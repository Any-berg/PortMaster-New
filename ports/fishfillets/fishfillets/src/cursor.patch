--- a/src/menu/NodeDrawer.h
+++ b/src/menu/NodeDrawer.h
@@ -29,6 +29,7 @@ class NodeDrawer : public NoCopy {
         void drawEdge(const LevelNode *start, const LevelNode *end) const;
         void drawSelect(const V2 &loc) const;
         void drawSelected(const std::string &levelname) const;
+        void drawCursor(const V2 &loc) const;  // New method for cursor
 };
 
 #endif

--- a/src/menu/NodeDrawer.cpp
+++ b/src/menu/NodeDrawer.cpp
@@ -135,4 +135,32 @@ NodeDrawer::drawEdge(const LevelNode *start, const LevelNode *end) const
     aalineColor(m_screen, x1 - 1, y1 + 1 , x2 - 1, y2 + 1, colorRGBA);
     aalineColor(m_screen, x1 + 1, y1 - 1 , x2 + 1, y2 - 1, colorRGBA);
 }
+
+//-----------------------------------------------------------------
+void
+NodeDrawer::drawCursor(const V2 &loc) const 
+{
+    // Draw a simple cross-hair cursor using SDL_gfx primitives
+    Sint16 x = loc.getX();
+    Sint16 y = loc.getY();
+    
+    // Cursor size
+    const int size = 12;
+    
+    // Draw white cursor lines
+    Uint32 colorRGBA = 0xFFFFFFFF;  // White
+    
+    // Vertical line
+    lineColor(m_screen, x, y - size, x, y + size, colorRGBA);
+    
+    // Horizontal line  
+    lineColor(m_screen, x - size, y, x + size, y, colorRGBA);
+    
+    // Draw black outline for visibility
+    Uint32 outlineRGBA = 0x000000FF;  // Black
+    
+    // Vertical line outline
+    lineColor(m_screen, x-1, y - size, x-1, y + size, outlineRGBA);
+    lineColor(m_screen, x+1, y - size, x+1, y + size, outlineRGBA);
+    
+    // Horizontal line outline
+    lineColor(m_screen, x - size, y-1, x + size, y-1, outlineRGBA);
+    lineColor(m_screen, x - size, y+1, x + size, y+1, outlineRGBA);
+}

--- a/src/menu/WorldMap.cpp
+++ b/src/menu/WorldMap.cpp
@@ -38,6 +38,9 @@ WorldMap::WorldMap()
     takeHandler(new WorldInput(this));
     registerDrawable(m_bg);
     registerDrawable(this);
+    
+    // Disable hardware cursor
+    SDL_ShowCursor(SDL_DISABLE);
 }
 
 //-----------------------------------------------------------------
@@ -258,6 +261,8 @@ WorldMap::drawOn(SDL_Surface *screen)
         m_drawer->drawSelect(m_selected->getLoc());
         m_drawer->drawSelected(findLevelName(m_selected->getCodename()));
     }
+    // Draw software cursor last so it's always on top
+    m_drawer->drawCursor(m_lastMouseLoc);
 }