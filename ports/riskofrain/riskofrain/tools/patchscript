#!/bin/bash

#
#   Risk of Rain patch script
#   Author: kotzebuedog
#   Version: 1.0
#   

XDG_DATA_HOME=${XDG_DATA_HOME:-$HOME/.local/share}

if [ -d "/opt/system/Tools/PortMaster/" ]; then
  controlfolder="/opt/system/Tools/PortMaster"
elif [ -d "/opt/tools/PortMaster/" ]; then
  controlfolder="/opt/tools/PortMaster"
elif [ -d "$XDG_DATA_HOME/PortMaster/" ]; then
  controlfolder="$XDG_DATA_HOME/PortMaster"
else
  controlfolder="/roms/ports/PortMaster"
fi

source $controlfolder/control.txt

# Set GAMEDIR to the current directory and set logfile
export GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"

# Redirect output and error to the log file
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

# Export binary path
export PATH="$PATH:$GAMEDIR/tools:$controlfolder"

# data.win md5 sum
# version: 16 September 2024 / Changelist #25251416 (STEAM)
DATA_WIN_MD5="d32c0d93bfc23b242fe7fca90f1d07ef"

# -------------------- BEGIN FUNCTIONS --------------------

cleanup_files()
{
    # Delete unnecessary files
    files_to_delete=(
        "D3DX9_43.dll"
        "GMFile.dll"
        "GMIni.dll"
        "GMResource.dll"
        "GMXML.dll"
        "MyMod.gamelog.txt"
        "MyMod.temp"
        "Risk of Rain.exe"
        "steam_api.dll"
        "steam_autocloud.vdf"
    )

    for file in "${files_to_delete[@]}"; do
        rm "$GAMEDIR/gamedata/$file"
    done

    return 0
}

pack_assets()
{
    # Check if there are any .ogg files in the current directory
    [[ ! -n "$(ls $GAMEDIR/gamedata/*.ogg 2>/dev/null)" ]] && echo "No ogg file found" && return 0
    
    # Create the assets directory if it doesn't exist
    mkdir -p "$GAMEDIR/assets"

    # Move all .ogg files from the current directory to ./assets
    mv "$GAMEDIR/gamedata/"*.ogg "$GAMEDIR/assets/"
    [[ ! $? -eq 0 ]] && echo "Cannot move Ogg files" && return 1    # CRITICAL

    echo "Ogg files moved to assets folder"

    # Zip the contents of ./assets into ./game.apk without compression
    zip -r -0 "$GAMEDIR/riskofrain.port" "./assets"
    [[ ! $? -eq 0 ]] && echo "Cannot pack assets" && return 1       # CRITICAL
    echo "Assets packed"

    # Delete the assets directory after processing
    rm -rf "./assets"
    [[ ! $? -eq 0 ]] && echo "Cannot delete assets folder" \
    || echo "Assets folder deleted"

    return 0
}

install_conf()
{
    ini_file="conf/Prefs.ini"
    [[ -f "$ini_file" ]] && mv -f "$ini_file" "$GAMEDIR/gamedata/"
    echo "Default config set"

    return 0

}

patch_game()
{

    calc_checksum=$(md5sum "$GAMEDIR/gamedata/data.win" | awk '{print $1}')
    [[ "$calc_checksum" != "$DATA_WIN_MD5" ]] \
    && echo "Wrong md5 for data.win" && return 1        # CRITICAL

    xdelta3 -vv -d -s "$GAMEDIR/gamedata/data.win" \
                   -f "$GAMEDIR/patch/riskofrain.xdelta" \
                   "$GAMEDIR/gamedata/game.droid"

    [[ ! $? -eq 0 ]] && echo "xdelta patching failed" && return 1   # CRITICAL

    echo "Removing original data.win file"
    rm "$GAMEDIR/gamedata/data.win"

    return 0
}

# --------------------- END FUNCTIONS ---------------------

# Install the game
patch_game && install_conf && pack_assets && cleanup_files
[[ ! $? -eq 0 ]] && echo "Cannot install the game" \
&& echo "Patching process failed!" && exit 1

echo "Patching process done!" && exit 0