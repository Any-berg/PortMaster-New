name: PortMaster Release

on:
  # We only run manually
  workflow_dispatch:

concurrency: 
  group: release # only 1 release at a time

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: hmarr/debug-action@v2
        name: "debug: ${{github.event_name}}"

      - name: env - better defaulting of env vars;
        id: env
        run: |
          ~/git-scripts/PortMaster-New-Prepare.sh

      - name: Get release name for artifacts
        id: date
        run: |
          echo "date=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_OUTPUT

      - name: Generate Port Files.
        id: ports-info
        run: |
          ~/git-scripts/PortMaster-New-Build-Release.sh "${{steps.date.outputs.date}}"

      ######################################################################
      ## Only run these if it is the PortMaster-New repo
      - uses: robinraju/release-downloader@v1.8
        if: ${{ steps.env.outputs.RELEASE_REPO }} == "PortMaster-New"
        with:
          out-file-path: "releases"
          repository: "PortsMaster/PortMaster-GUI"
          tag: "${{ steps.env.outputs.PMGUI_RELEASE }}"
          fileName: "PortMaster.zip"

      ######################################################################

      - name: "Prepare Release"
        uses: ncipollo/release-action@v1
        with:
          tag: "${{steps.date.outputs.date}}"
          allowUpdates: true
          draft: true
          prerelease: false
          replacesArtifacts: false
          omitNameDuringUpdate: true
          artifacts: "releases/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: ${{ steps.env.outputs.RELEASE_REPO }}
          owner: ${{ steps.env.outputs.RELEASE_ORG }}

      - name: "Publish Release"
        uses: ncipollo/release-action@v1
        with:
          tag: "${{steps.date.outputs.date}}"
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          allowUpdates: true
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: ${{ steps.env.outputs.RELEASE_REPO }}
          owner: ${{ steps.env.outputs.RELEASE_ORG }}

      - name: Release Info
        id: info
        run: |
          echo "Published release: ${{steps.date.outputs.date}} to: https://github.com/${{ steps.env.outputs.RELEASE_ORG}}/${{ steps.env.outputs.RELEASE_REPO}}"
